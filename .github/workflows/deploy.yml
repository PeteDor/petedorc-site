name: Deploy petedorc.com

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ "site/**" ]   # only run when /site changes

env:
  AWS_REGION: us-east-1
  S3_BUCKET: petedorc-site
  CF_DIST_ID: E2V3LE90V78FWL
  SOURCE_PATH: "site"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
  - name: Checkout
    uses: actions/checkout@v4

  - name: Configure AWS (OIDC)
    uses: aws-actions/configure-aws-credentials@v4
    with:
      role-to-assume: arn:aws:iam::637423348409:role/GitHubDeployPetedorc
      aws-region: ${{ env.AWS_REGION }}

  # Ensure no old nested /site/ path remains (safe if not present)
  - name: Cleanup any nested s3://$S3_BUCKET/site/
    run: aws s3 rm "s3://$S3_BUCKET/site/" --recursive || true

  # Short-cache HTML so updates show up quickly
  - name: Sync HTML
    run: |
      aws s3 sync "$SOURCE_PATH" "s3://$S3_BUCKET" \
        --exclude "*" --include "*.html" \
        --cache-control "max-age=60,public" \
        --delete

  # Upload robots/sitemap with proper content-type + short cache
  - name: Upload robots + sitemap
    run: |
      if [ -f "$SOURCE_PATH/robots.txt" ]; then
        aws s3 cp "$SOURCE_PATH/robots.txt" "s3://$S3_BUCKET/robots.txt" \
          --content-type "text/plain" --cache-control "max-age=300,public"
      fi
      if [ -f "$SOURCE_PATH/sitemap.xml" ]; then
        aws s3 cp "$SOURCE_PATH/sitemap.xml" "s3://$S3_BUCKET/sitemap.xml" \
          --content-type "application/xml" --cache-control "max-age=300,public"
      fi

  # Long-cache everything else (images, css, js, pdf, etc) â€“ exclude robots/sitemap
  - name: Sync assets (immutable)
    run: |
      aws s3 sync "$SOURCE_PATH" "s3://$S3_BUCKET" \
        --exclude ".git/*" --exclude ".github/*" --exclude "*.html" \
        --exclude "robots.txt" --exclude "sitemap.xml" \
        --cache-control "max-age=31536000,public,immutable" \
        --delete

  # Invalidate only changing paths
  - name: Invalidate CloudFront
    run: |
      aws cloudfront create-invalidation \
        --distribution-id "$CF_DIST_ID" \
        --paths "/index.html" "/case-studies/*" "/docs/*" "/sitemap.xml" "/robots.txt" "/404.html"
