name: Deploy petedorc.com

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ "site/**" ]     # only run when /site changes

env:
  AWS_REGION: us-east-1
  S3_BUCKET: petedorc-site
  CF_DIST_ID: E2V3LE90V78FWL
  SOURCE_PATH: site

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::637423348409:role/GitHubDeployPetedorc
          aws-region: ${{ env.AWS_REGION }}

      # One-time safety: remove any old nested /site/ prefix in S3
      - name: Cleanup any nested s3://$S3_BUCKET/site/
        run: aws s3 rm "s3://${{ env.S3_BUCKET }}/site/" --recursive || true

      # Short-cache HTML so edits show quickly
      - name: Sync HTML
        run: |
          aws s3 sync "$SOURCE_PATH" "s3://${{ env.S3_BUCKET }}" \
            --exclude "*" --include "*.html" \
            --cache-control "max-age=60,public" \
            --delete

      # robots + sitemap = proper MIME + short cache
      - name: Upload robots + sitemap
        run: |
          if [ -f "$SOURCE_PATH/robots.txt" ]; then
            aws s3 cp "$SOURCE_PATH/robots.txt" "s3://${{ env.S3_BUCKET }}/robots.txt" \
              --content-type "text/plain" --cache-control "max-age=300,public"
          fi
          if [ -f "$SOURCE_PATH/sitemap.xml" ]; then
            aws s3 cp "$SOURCE_PATH/sitemap.xml" "s3://${{ env.S3_BUCKET }}/sitemap.xml" \
              --content-type "application/xml" --cache-control "max-age=300,public"
          fi
          if [ -f "$SOURCE_PATH/404.html" ]; then
            aws s3 cp "$SOURCE_PATH/404.html" "s3://${{ env.S3_BUCKET }}/404.html" \
              --content-type "text/html" --cache-control "max-age=300,public"
          fi

      # Long-cache everything else (css/js/img/pdf). Exclude HTML + robots/sitemap.
      - name: Sync assets (immutable)
        run: |
          aws s3 sync "$SOURCE_PATH" "s3://${{ env.S3_BUCKET }}" \
            --exclude ".git/*" --exclude ".github/*" \
            --exclude "*.html" --exclude "robots.txt" --exclude "sitemap.xml" \
            --cache-control "max-age=31536000,public,immutable" \
            --delete

      # Invalidate only the things that change
      - name: Invalidate CloudFront (HTML + docs + metadata)
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ env.CF_DIST_ID }}" \
            --paths "/index.html" "/case-studies/*" "/docs/*" "/sitemap.xml" "/robots.txt" "/404.html"
